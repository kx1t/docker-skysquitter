#!/usr/bin/with-contenv bash
#shellcheck shell=bash

# -----------------------------------------------------------------------------------
# Copyright 2022 kx1t - licensed under the terms and conditions
# of GPLv3. The terms and conditions of this license are included with the Github
# distribution of this package, and are also available here:
# https://github.com/kx1t/docker-skysquitter/

# redirect stderr to stdout so it's picked up in the docker logs
exec 2>&1
# all errors will show a line number and the command used to produce the error
SCRIPT_PATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd)/$(basename "$0")"
trap 'echo -e "[ERROR] $SCRIPT_PATH in line $LINENO when executing: $BASH_COMMAND"' ERR

APPNAME="$(hostname)/ssq-feeder"

if [[ -f /run/recv_host_ip ]]
then
  RECV_HOST="$(cat /run/recv_host_ip)"
fi

echo "[$APPNAME][$(date)] Started as an s6 service"
sleep 10 # to make she the VPN is up and stable and stopped spamming the logs
# Initiate some environment variables:
echo "[$APPNAME][$(date)] Checking the SkySquitter Network..."
# Now check if we can reach the SkySquitter server:
while ! timeout --preserve-status 10 ping -c5 ${DEST_HOST} >/dev/null 2>&1
do
  echo "[$APPNAME][$(date)] ${DEST_HOST} is not yet available. Trying again in a bit."
  sleep 5
done

echo "[$APPNAME][$(date)] ${DEST_HOST} is available."
echo "[$APPNAME][$(date)] ---------------------------------------------------------------"
echo "[$APPNAME][$(date)] Starting the Data Connector..."

# Now we can start parsing data from SOURCE and pass it to DEST:
touch /run/lock/beast-feeder.up
java -jar /opt/beast-feeder/beast-feeder.jar start_delay=${START_DELAY} logging=${LOGGING} recv_host=${RECV_HOST} recv_port=${RECV_PORT} recv_timeout=${RECV_TIMEOUT} dest_host=${DEST_HOST} dest_port=${DEST_PORT}
rm -rf /run/lock/beast-feeder.up
echo "[$APPNAME][$(date)] ---------------------------------------------------------------"
echo "[$APPNAME][$(date)] The Data Connector exited... we will restart in 10 seconds"
sleep 10
