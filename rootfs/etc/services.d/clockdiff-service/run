#!/usr/bin/with-contenv bash
#shellcheck shell=bash disable=SC2153,SC2164,SC2016

# -----------------------------------------------------------------------------------
# Copyright 2022 kx1t - licensed under the terms and conditions
# of the MIT License. The terms and conditions of this license are included with the Github
# distribution of this package, and are also available here:
# https://github.com/kx1t/docker-skysquitter/

# redirect stderr to stdout so it's picked up in the docker logs
exec 2>&1
# all errors will show a line number and the command used to produce the error
# SCRIPT_PATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd)/$(basename "$0")"
# trap 'echo -e "[ERROR] $SCRIPT_PATH in line $LINENO when executing: $BASH_COMMAND"' ERR

APPNAME="$(hostname)/clockdiff-service"
echo "[$(date)][$APPNAME] Started as an s6 service"

[[ -z "$NTP_REFSERVER" ]] && NTP_REFSERVER="pool.ntp.org"
SLEEPTIME="60s"
RUNFILE="/run/clockdiff.status"
LOGINTERVAL=3600
MAX_ERROR_COUNT=5


lastlog=$(($(date +%s) - LOGINTERVAL - 1))
errorcount=0

echo "$(date +%s)000,99999,99999,\"clockdiff not yet available\"" > "${RUNFILE}"

while true
do
    lastchecked="$(date +%s)000"
    timediff="$(clockdiff $NTP_REFSERVER 2>&1)"
    sleep $SLEEPTIME
    # capture a few errors
    if grep -i "command not found" <<< "${timediff}" >/dev/null 2>&1
    then
        echo "${lastchecked},99999,99999,\"clockdiff cmd not installed\"" > "${RUNFILE}"
        echo "[$(date)][$APPNAME] Stopped clockdiff-server: clockdiff not installed"
        sleep infinity
    fi
    if grep -i "nice: Operation not permitted" <<< "${timediff}" >/dev/null 2>&1
    then
        echo "${lastchecked},99999,99999,\"NICE capability not available in container\"" > "${RUNFILE}"
        echo "[$(date)][$APPNAME] Stopped clockdiff-server: NICE capability not available in container"
        sleep infinity
    fi
    if grep -i "Name or service not known" <<< "${timediff}" >/dev/null 2>&1
    then
        echo "${lastchecked},99999,99999,\"Cannot resolve NTP server ${NTP_REFSERVER}\"" > "${RUNFILE}"
        (( errorcount++ ))
        if (( errorcount > MAX_ERROR_COUNT ))
        then
            echo "[$(date)][$APPNAME] Temporary issue resolving NTP server ${NTP_REFSERVER}"
            errorcount=0
        fi
        continue
    fi
    # sometimes the service is down
    if grep -i "is down" <<< "${timediff}" >/dev/null 2>&1
    then
        (( errorcount++ ))
        if (( errorcount > MAX_ERROR_COUNT ))
        then
            echo "[$(date)][$APPNAME] Temporary issue connecting to NTP server ${NTP_REFSERVER} (reported down)"
            errorcount=0
        fi
        continue
    fi
    # last check if at least the first field is a digit string
    x="$(awk '{print $1}' <<< "${timediff}")"
    if [ -z "${x##*[!0-9]*}" ]
    then
        (( errorcount++ ))
        if (( errorcount > MAX_ERROR_COUNT ))
        then
            echo "${lastchecked},99999,99999,\"Error: ${timediff}\"" > "${RUNFILE}"
            errorcount=0
        fi
        continue
    fi

    # if we are here, then we can print the clockdiff values
    printf "%s,%s,%s,\"\"" "$(awk '{print $1}' <<< "${timediff}")" "$(awk '{print $2}' <<< "${timediff}")" "$(awk '{print $3}' <<< "${timediff}")" > "${RUNFILE}"
    errorcount=0
    # Be less verbose in logging
    if (( lastlog + LOGINTERVAL < $(date +%s) ))
    then
        echo "[$(date)][$APPNAME] Clock drift: $(awk '{print $2}' <<< "${timediff}") msec/$(awk '{print $3}' <<< "${timediff}") msec"
        lastlog="$(date +%s)"
    fi
done
