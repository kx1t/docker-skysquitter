#!/command/with-contenv bash
# shellcheck shell=bash disable=SC2016,SC2015,SC1091

# This module gets a DEV version of beast-feeder.py if needed

APPNAME="$(hostname)/30-get-beastfeeder-dev"

# load common functions
source /scripts/common
# preconfige s6wrap with some args:
s6wrap=(s6wrap --quiet --timestamps --prepend="${APPNAME}" --args)

if [[ -z "$BEASTDEV" ]]
then
  # BEASTDEV is not defined -- we're running production code and nothing is to be done
  exit 0
fi

header="${BEASTDEV:0:4}"
header="${header,,}"

if [[ "$header" != "http" ]]
then
  BEASTDEV="https://raw.githubusercontent.com/skysquitter22/beast-feeder/dev/beast-feeder.py"
fi

tmpfile="$(mktemp)"

if ! curl -sL "$BEASTDEV" > "$tmpfile"
then
  # something went wrong
  ERRORSTRING="$(curl -sLf "$BEASTDEV" -I | head -1 | tr -cd '[:print:]')"
  "${s6wrap[@]}" echo "Error: cannot download $BEASTDEV:"
  "${s6wrap[@]}" echo "Download attempt resulted in \"$ERRORSTRING\"."
  "${s6wrap[@]}" echo "We will use the production beast-feeder.py instead."
  exit 0
fi

# One more check:
teststring="$(head -1 "$tmpfile")"
teststring="${teststring:0:2}"

if [[ "${teststring:0:2}" != "#!" ]]
then
  "${s6wrap[@]}" echo "Error: cannot download $BEASTDEV:"
  "${s6wrap[@]}" echo "Download attempt resulted in \"$(head -1 "$tmpfile")\""
  "${s6wrap[@]}" echo "We will use the production beast-feeder.py instead."
  rm -f "$tmpfile"
  exit 0
fi

mv -f "$tmpfile" /usr/local/bin/beast-feeder
chmod a+rx /usr/local/bin/beast-feeder

"${s6wrap[@]}" echo "DEVELOPMENT USE: Replaced beast-feeder.py with the one from $BEASTDEV"
